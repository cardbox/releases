version: "3.7"

# https://cardboxd.sova.dev

# mkdir -p /usr/local/var/cardbox/images
# mkdir -p /usr/local/var/cardbox/postgres
# mkdir -p /usr/local/var/cardbox/webroot
##
## issue one certificate with let's encrypt with webroot
## for cardbox.sova.dev
#
# mkdir -p /usr/local/var/cardbox/tls
# openssl dhparam -out /usr/local/var/cardbox/tls/dhparam.pem 2048

volumes:
  image-storage:
    driver: local
    driver_opts:
      type: none
      device: "/usr/local/var/cardbox/images"
      o: bind

  facade-webroot:
    driver: local
    driver_opts:
      type: none
      device: "/usr/local/var/cardbox/webroot"
      o: bind

  postgres-storage:
    driver: local
    driver_opts:
      type: none
      device: "/usr/local/var/cardbox/postgres"
      o: bind

services:
  # DEV specific service to update letsencrypt
  certbot:
    container_name: cardbox-certbot
    image: certbot/certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt

  api-internal:
    image: "docker.pkg.github.com/cardbox/backend/api-internal:latest"

  frontend:
    image: "docker.pkg.github.com/cardbox/frontend/main:latest"
    environment:
      PUBLIC_URL: https://cardbox.sova.dev
      IMAGE_URL: https://cardbox.sova.dev/images
      DEBUG: "true"

  facade:
    image: "docker.pkg.github.com/cardbox/releases/facade:latest"
    networks:
      entry:
        aliases:
          - cardbox.sova.dev
    volumes:
      - /etc/letsencrypt/live/cardbox.sova.dev/fullchain.pem:/var/lib/cardbox/tls/cardbox.crt:ro
      - /etc/letsencrypt/live/cardbox.sova.dev/privkey.pem:/var/lib/cardbox/tls/cardbox.pem:ro
      - /usr/local/var/cardbox/tls/dhparam.pem:/etc/ssl/certs/dhparam.pem:ro
      - image-storage:/images
      - facade-webroot:/webroot
    environment:
      SERVER_NAME: cardbox.sova.dev
      WEB_EXTRA: if ($$request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
        }
        if ($$request_method = 'POST') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        }