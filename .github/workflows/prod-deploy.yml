
name: Deploy Prod

on:
  push:
    branches-ignore:
      - master
    paths:
      - "docker-compose.yaml"
      - "dev.yaml"
      - ".github/workflows/dev-deploy.yml"
      - "services/*"
  workflow_dispatch:
    inputs:
      images_tag:
        description: Tag for all images in this release
        required: true
        default: 'latest'

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  DEPLOYMENT_NAME: ${{ secrets.DEPLOYMENT_NAME }}

jobs:
  deploy:
    # Restrict deploy to prod
    if: contains('["Drevoed","sergeysova"]', github.actor)
    name: Deploy ${{ github.event.client_payload.github.repository }}
    runs-on: [self-hosted]
    steps:
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub Deployment
        id: deployment
        with:
          token: '${{ github.token }}'
          environment: production

      - uses: sergeysova/deployment-status@releases/v1.1
        name: Deployment progress
        with:
          token: '${{ github.token }}'
          state: in_progress
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - uses: actions/checkout@v2
        name: Checkout

      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      - run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      - name: Deploy
        run: |-
          kubectl apply -f deployment.yaml
          kubectl rollout status -n cardbox

      - uses: sergeysova/deployment-status@releases/v1.1
        name: Deployment success
        if: success()
        with:
          token: '${{ github.token }}'
          environment_url: https://cardbox.dev
          state: success
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - uses: sergeysova/deployment-status@releases/v1.1
        name: Deployment failure
        if: failure()
        with:
          token: '${{ github.token }}'
          state: failure
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
