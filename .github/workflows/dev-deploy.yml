
name: Deploy Dev

on:
  push:
    branches-ignore:
      - master
    paths:
      - "docker-compose.yaml"
      - "dev.yaml"
      - ".github/workflows/dev-deploy.yml"
      - "services/*"
  repository_dispatch:
    types:
      - deploy-dev
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy ${{ github.event.client_payload.github.repository }}
    runs-on: [self-hosted, dev]
    defaults:
      run:
        working-directory: /home/www/cardbox-releases
    env:
      DOMAIN_NAME: 'cardbox.sova.dev'
      CARDBOX_SERVER__USE_SSL: "false"
      CARDBOX_ACCESSO__URL: 'https://auth.sova.dev'
      CARDBOX_ACCESSO__CLIENT_ID: '00000000-0000-4000-acce-000000009100'
      CARDBOX_ACCESSO__REDIRECT_BACK_URL: 'https://cardbox.sova.dev/accesso/done'
      CARDBOX_ACCESSO__CLIENT_SECRET: 'CardboxDev'
      CARDBOX_ACCESSO__SSL_VALIDATE: 'false'
      DATABASE_HOST: 'database'
    steps:
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub Deployment
        id: deployment
        with:
          token: '${{ github.token }}'
          environment: development
      
      - uses: sergeysova/deployment-status@releases/v1.1
        name: Deployment progress
        with:
          token: '${{ github.token }}'
          state: in_progress
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Checkout release
        run: |
          git reset --hard HEAD
          git clean -f
          git fetch -p
          git checkout ${{ github.sha }}

      - name: Docker Compose
        run: |
          docker login --username ${{ secrets.DOCKER_HUB_LOGIN }} -p ${{ secrets.DOCKER_HUB_TOKEN }}
          docker login ghcr.io --username ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          export POSTGRES_DB="${{ secrets.DEV_DB }}"
          export POSTGRES_USER="${{ secrets.DEV_DB_USER }}"
          export POSTGRES_PASSWORD="${{ secrets.DEV_DB_PASSWORD }}"
          export CARDBOX_SERVER__USE_SSL="${{ env.CARDBOX_SERVER__USE_SSL }}"
          export RAZZLE_SESSION_TOKEN="${{ secrets.DEV_RAZZLE_SESSION_TOKEN }}"
          export STATUSPAGE_ID="gk7395sfn3qd"
          docker-compose -f docker-compose.yaml -f dev.yaml pull --quiet
          docker-compose -f docker-compose.yaml -f dev.yaml build
          docker-compose -f docker-compose.yaml -f dev.yaml up -d --remove-orphans

      - name: Clean docker containers and volumes
        run: docker system prune -a --volumes -f

      - uses: sergeysova/deployment-status@releases/v1.1
        name: Deployment success
        if: success()
        with:
          token: '${{ github.token }}'
          environment_url: https://cardbox.sova.dev
          state: success
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - uses: sergeysova/deployment-status@releases/v1.1
        name: Deployment failure
        if: failure()
        with:
          token: '${{ github.token }}'
          state: failure
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
