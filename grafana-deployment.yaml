apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f resolved.yaml convert
    kompose.version: 1.23.0 (bc7d9f4f)
    traefik.enable: "true"
    traefik.http.routers.grafana.rule: Host(`grafana.vetro.me`)
    traefik.http.routers.grafana.tls: "true"
    traefik.http.routers.grafana.tls.certresolver: le
  creationTimestamp: null
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f resolved.yaml convert
        kompose.version: 1.23.0 (bc7d9f4f)
        traefik.enable: "true"
        traefik.http.routers.grafana.rule: Host(`grafana.vetro.me`)
        traefik.http.routers.grafana.tls: "true"
        traefik.http.routers.grafana.tls.certresolver: le
      creationTimestamp: null
      labels:
        io.kompose.network/cardbox: "true"
        io.kompose.service: grafana
    spec:
      containers:
        - image: grafana/grafana:latest
          name: grafana
          resources: {}
          volumeMounts:
            - mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
              name: grafana-claim0
            - mountPath: /var/lib/grafana
              name: grafana-storage
      restartPolicy: Always
      volumes:
        - name: grafana-claim0
          persistentVolumeClaim:
            claimName: grafana-claim0
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-storage
status: {}
